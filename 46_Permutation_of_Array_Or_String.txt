//Problem : Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

//Leetcode Problem Link: https://leetcode.com/problems/permutations/description/


class Solution {
public:
   
    void permuteUtil(vector<int>& a,int pos,int end, vector<vector<int>> &finalans) {
         
        // if we reached last elements, then no need to go further as last element is itself at right position
        if(pos == end)
        {
            finalans.push_back(a);
            return;
        }
        
        for(int i=pos;i<=end;i++) 
        {
             swap(a[pos],a[i]);   //finding permutations
             permuteUtil(a,pos+1,end,finalans);
             //swapping as to get the previous array content
             swap(a[pos],a[i]);    //backtracting
        }
       
    }



    vector<vector<int>> permute(vector<int>& nums) {
      
       // to store all the permutations  
        vector<vector<int>> finalans;

        int n= nums.size();
     
        permuteUtil(nums,0,n-1,finalans);
        return finalans;
        
    }
};